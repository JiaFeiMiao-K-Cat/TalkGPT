@inject IMessageService _message;
@inject INotificationService _notice;
@inject IJSRuntime _js;
<!-- inject ISpeechToText _speechToText; -->
@inject AzureSpeechSDK _speechSDK;
@inject GPTSDK _gptSDK;
@inject SDKSettingsService _sdkSettings;
@page "/"

<style></style>

<Spin Spinning="@loading">
    <Layout Style="height:96vh">
        <Content>
            <BootstrapBlazor.Components.ListView Items="@_gptSDK.Messages" TItem="NewChatMessage" class="newcard">
                <BodyTemplate>
                    @if (context.Role == ChatRole.System)
                    {
                        <BootstrapBlazor.Components.Card Style="background-color: #e8e9ee; ">
                            <HeaderTemplate>
                                <BootstrapBlazor.Components.Avatar IsCircle="true"
                                                                   IsIcon="true"
                                                                   Size="BootstrapBlazor.Components.Size.ExtraSmall"
                                                                   Icon="fa-solid fa-cog"
                                                                   Style="color: #87d068; background-color: #e8e9ee" />
                                <Divider Type="DirectionVHType.Vertical" />
                                <Text Strong>@context.Role</Text>
                                <Divider Type="DirectionVHType.Vertical" />
                                @context.CreateTime.ToLocalTime().ToString("yy-MM-dd HH:mm:ss")
                                <Divider Type="DirectionVHType.Vertical" />
                                <Button OnClick="() => Clipboard.Default.SetTextAsync(context.NewContent)">Cpoy</Button>
                            </HeaderTemplate>
                            <BodyTemplate>
                                <BootstrapBlazor.Components.CherryMarkdown IsViewer="true" Value="@context.NewContent" />
                            </BodyTemplate>
                        </BootstrapBlazor.Components.Card>
                    }
                    else if (context.Role == ChatRole.User)
                    {
                        <BootstrapBlazor.Components.Card Style="background-color: #fde3cf">
                            <HeaderTemplate>
                                <BootstrapBlazor.Components.Avatar IsCircle="true"
                                                                   IsIcon="true"
                                                                   Size="BootstrapBlazor.Components.Size.ExtraSmall"
                                                                   Icon="fa-solid fa-user"
                                                                   Style="color: #f56a00; background-color:#fde3cf;" />
                                <Divider Type="DirectionVHType.Vertical" />
                                <Text Strong>@context.Role</Text>
                                <Divider Type="DirectionVHType.Vertical" />
                                @context.CreateTime.ToLocalTime().ToString("yy-MM-dd HH:mm:ss")
                                <Divider Type="DirectionVHType.Vertical" />
                                <Button OnClick="() => Clipboard.Default.SetTextAsync(context.NewContent)">Cpoy</Button>
                            </HeaderTemplate>
                            <BodyTemplate>
                                <BootstrapBlazor.Components.CherryMarkdown IsViewer="true" Value="@context.NewContent" />
                            </BodyTemplate>
                        </BootstrapBlazor.Components.Card>
                    }
                    else
                    {
                        <BootstrapBlazor.Components.Card Style="background-color: #b1dbc7">
                            <HeaderTemplate>
                                <BootstrapBlazor.Components.Avatar IsCircle="true"
                                                                   IsIcon="true"
                                                                   Size="BootstrapBlazor.Components.Size.ExtraSmall"
                                                                   Icon="fa-solid fa-robot"
                                                                   Style="color: #1890ff; background-color: #b1dbc7" />
                                <Divider Type="DirectionVHType.Vertical" />
                                <Text Strong>@context.Role</Text>
                                <Divider Type="DirectionVHType.Vertical" />
                                @context.CreateTime.ToLocalTime().ToString("yy-MM-dd HH:mm:ss")
                                <Divider Type="DirectionVHType.Vertical" />
                                <Button OnClick="() => Clipboard.Default.SetTextAsync(context.NewContent)">Cpoy</Button>
                            </HeaderTemplate>
                            <BodyTemplate>
                                <BootstrapBlazor.Components.CherryMarkdown IsViewer="true" Value="@context.NewContent" />
                            </BodyTemplate>
                        </BootstrapBlazor.Components.Card>
                    }
                </BodyTemplate>
                <FooterTemplate>
                    <div>
                        <TextArea ShowCount MaxLength="1000" AutoSize Placeholder="请输入问题" AllowClear="true" @bind-Value="@ProblemText" />
                        <Button Type="@ButtonType.Primary" OnClick="@GetAnswer">提问</Button>
                        <Button Danger Type="@ButtonType.Primary" OnClick="@_gptSDK.ResetMeaages">重置</Button>
                        <!-- <Button Type="@ButtonType.Primary" OnClick="@Click">开始</Button>
                        <Button Type="@ButtonType.Primary" OnClick="@Stop">停止</Button>
                        <p>@RecognitionText</p> -->
                    </div>
                </FooterTemplate>
            </BootstrapBlazor.Components.ListView>
        </Content>
        <!-- <TextArea ReadOnly AutoSize @bind-Value="@AnswerText"></TextArea> -->
    </Layout>
</Spin>