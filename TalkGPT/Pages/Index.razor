@inject IMessageService _message;
@inject INotificationService _notice;
@inject IJSRuntime _js;
<!-- inject ISpeechToText _speechToText; -->
@inject AzureSpeechSDK _speechSDK;
@inject GPTSDK _gptSDK;
@inject SDKSettingsService _sdkSettings;
@page "/"

<div>
    <Spin Spinning="@loading">
        <AntList DataSource="@_gptSDK.Messages" TItem="NewChatMessage" Size="large" Bordered>
            <ChildContent>
                @if (context.Role == ChatRole.System)
                {
                    <ListItem Style="background-color: #e8e9ee">
                        <ListItemMeta AvatarTemplate="systemAvatar">
                            <TitleTemplate>
                                <Text Strong>@context.Role</Text>
                                <Divider Type="DirectionVHType.Vertical" />
                                @context.CreateTime.ToLocalTime().ToString("yy-MM-dd HH:mm:ss")
                                <Divider Type="DirectionVHType.Vertical" />
                                <Button OnClick="() => Clipboard.Default.SetTextAsync(context.NewContent)">Cpoy</Button>
                            </TitleTemplate>
                            <DescriptionTemplate>
                                <BootstrapBlazor.Components.CherryMarkdown IsViewer="true" Value="@context.NewContent" />
                            </DescriptionTemplate>
                        </ListItemMeta>
                    </ListItem>
                }
                else if (context.Role == ChatRole.User)
                {
                    <ListItem Style="background-color: #fde3cf">
                        <ListItemMeta AvatarTemplate="userAvatar">
                            <TitleTemplate>
                                <Text Strong>@context.Role</Text>
                                <Divider Type="DirectionVHType.Vertical" />
                                @context.CreateTime.ToLocalTime().ToString("yy-MM-dd HH:mm:ss")
                                <Divider Type="DirectionVHType.Vertical" />
                                <Button OnClick="() => Clipboard.Default.SetTextAsync(context.NewContent)">Cpoy</Button>
                            </TitleTemplate>
                            <DescriptionTemplate>
                                <BootstrapBlazor.Components.CherryMarkdown IsViewer="true" Value="@context.NewContent" />
                            </DescriptionTemplate>
                        </ListItemMeta>
                    </ListItem>
                }
                else
                {
                    <ListItem Style="background-color: #b1dbc7">
                        <ListItemMeta AvatarTemplate="assistantAvatar">
                            <TitleTemplate>
                                <Text Strong>@context.Role</Text>
                                <Divider Type="DirectionVHType.Vertical" />
                                @context.CreateTime.ToLocalTime().ToString("yy-MM-dd HH:mm:ss")
                                <Divider Type="DirectionVHType.Vertical" />
                                <Button OnClick="() => Clipboard.Default.SetTextAsync(context.NewContent)">Cpoy</Button>
                            </TitleTemplate>
                            <DescriptionTemplate>
                                <BootstrapBlazor.Components.CherryMarkdown IsViewer="true" Value="@context.NewContent" />
                            </DescriptionTemplate>
                        </ListItemMeta>
                    </ListItem>
                }
            </ChildContent>
            <Footer>
                <TextArea ShowCount MaxLength="1000" AutoSize Placeholder="请输入问题" AllowClear="true" @bind-Value="@ProblemText" />
                <Button Type="@ButtonType.Primary" OnClick="@GetAnswer">提问</Button>
                <Button Danger Type="@ButtonType.Primary" OnClick="@_gptSDK.ResetMeaages">重置</Button>
                <!-- <Button Type="@ButtonType.Primary" OnClick="@Click">开始</Button>
                <Button Type="@ButtonType.Primary" OnClick="@Stop">停止</Button>
                <p>@RecognitionText</p> -->
                <button @ref="myrefA" style="background:transparent; border-width:0px; outline:none; width:1px; height:1px;"></button>
                <button @ref="myrefB" style="background:transparent; border-width:0px; outline:none; width:1px; height:1px;"></button>
            </Footer>
        </AntList>
        <!-- <TextArea ReadOnly AutoSize @bind-Value="@AnswerText"></TextArea> -->
    </Spin>
</div>

@code {
    RenderFragment systemAvatar = @<Avatar Size="large" Icon="setting" Style="color: #87d068; background-color: #e8e9ee"></Avatar>;
    RenderFragment userAvatar = @<Avatar Size="large" Icon="user" Style="color: #f56a00; background-color:#fde3cf;"></Avatar>;
    RenderFragment assistantAvatar = @<Avatar Size="large" Icon="robot" Style="color: #1890ff; background-color: #b1dbc7"></Avatar>;
}